{"version":3,"sources":["js/utils/getElement/getElement.js","js/const/exampleGallery/exampleGallery.js","js/const/sliderDirectionMove/sliderDirectionMove.js","js/const/index.js","js/utils/moveSlider/moveSlider.js","js/utils/handleKeydownModal/handleKeydownModal.js","js/partials/generateCard/generateCard.js","js/partials/generateList/generateList.js","js/partials/generateSlider/generateSlider.js","js/partials/generatePlayer/generatePlayer.js","js/partials/generateModalPagination/generateModalPagination.js","js/partials/generateModal/generateModal.js","js/partials/index.js","js/utils/handleClickModal/handleClickModal.js","js/utils/toggleModal/toggleModal.js","js/utils/handleClickSlider/handleClickSlider.js","js/utils/index.js","js/index.js"],"names":["getElement","selector","document","querySelector","exampleGallery","i","_default","exports","default","SLIDER_DIRECTION_MOVE","LEFT","RIGHT","_exampleGallery","_interopRequireDefault","require","_sliderDirectionMove","obj","__esModule","_getElement","_const","itemsOnScreen","firstItemOnLastScreen","length","itemWidth","maxPosition","moveSlider","direction","slider","left","style","position","parseInt","moveDirection","concat","_toggleModal","handleKeydownModal","event","code","toggleModal","generateCard","src","generateList","elements","reduce","markup","element","index","generateSlider","generatePlayer","generateModalPagination","currentIndex","_","_generatePlayer","_generateModalPagination","generateModal","_generateCard","_generateList","_generateSlider","_generateModal","_partials","handleClickModal","target","classList","contains","innerHTML","dataset","_handleKeydownModal","_handleClickModal","modal","toggle","removeEventListener","addEventListener","_moveSlider","handleClickSlider","_event$target","className","includes","blur","_handleClickSlider","_utils","container","insertAdjacentHTML","map","video"],"mappings":"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","file":"js.6d20da4f.js","sourceRoot":"..\\src","sourcesContent":["//A function for searching an element in the DOM, the selector of the element\r\n//being searched is taken as a parameter, a pointer to this element is returned\r\nexport function getElement(selector) {\r\n    return document.querySelector(selector);\r\n}","//Creating a collection of videos, since according to the instructions the\r\n//collection should consist of eight identical videos, I use a loop to fill it.\r\nconst exampleGallery = [];\r\n\r\nfor (let i = 0; i < 8; i++) {\r\n    exampleGallery[i] = \"https://player.vimeo.com/video/824804225\";\r\n}\r\n\r\nexport default exampleGallery;","//Identifiers to indicate the direction of slider movement\r\nconst SLIDER_DIRECTION_MOVE = {\r\n    LEFT: \"left\",\r\n    RIGHT: \"right\",\r\n};\r\n\r\nexport default SLIDER_DIRECTION_MOVE;","//Application Constants\r\nimport exampleGallery from \"./exampleGallery/exampleGallery\";\r\nimport SLIDER_DIRECTION_MOVE from \"./sliderDirectionMove/sliderDirectionMove\";\r\n\r\nexport {\r\n    exampleGallery,\r\n    SLIDER_DIRECTION_MOVE,\r\n};","//Slider flipping function, takes rotation direction as a parameter\r\nimport { getElement } from \"../getElement/getElement\";\r\nimport { SLIDER_DIRECTION_MOVE, exampleGallery } from \"../../const\";\r\n\r\n//Number of elements on screen\r\nconst itemsOnScreen = 4;\r\n//Determining the index of the left element on the last pagination page\r\nconst firstItemOnLastScreen = exampleGallery.length - itemsOnScreen;\r\n//The width of one element, taking into account the width of the video and the gap between elements\r\nconst itemWidth = 250 + 8;\r\n//Slider position when the latest items in the collection are shown on the screen\r\nconst maxPosition = -1 * itemWidth * (firstItemOnLastScreen);\r\n\r\nexport function moveSlider(direction) {\r\n    const slider = getElement(\".slider\");\r\n    const { style: { left } } = slider;\r\n    \r\n    //Determining the current position of the slider,\r\n    //if this is the first function call the value is set to 0\r\n    let position = left === \"\" ? 0 : parseInt(left);\r\n    \r\n    //Determining the direction of rotation of the slider\r\n    const moveDirection = direction === SLIDER_DIRECTION_MOVE.LEFT ? 1 : -1;\r\n    \r\n    if (moveDirection === 1 && position === 0) {\r\n        //Setting a new position to the extreme right position in case of left rotation overflow\r\n        position = -1 * firstItemOnLastScreen * itemWidth;\r\n    } else if (moveDirection === -1 && position === maxPosition) {\r\n        //Setting a new position to the extreme left position in case of right rotation overflow\r\n        position = 0;\r\n    } else {\r\n        //Calculation of a new position in the general case\r\n        position += moveDirection * itemWidth;\r\n    }\r\n\r\n    //Setting the slider to a new position\r\n    slider.style.left = `${position}px`;\r\n}","//'keydown' event handler for the 'Escape' key in a modal window,\r\n//the modal window is closed, takes the event that occurred as a\r\n//parameter\r\nimport { toggleModal } from \"../toggleModal/toggleModal\";\r\n\r\nexport function handleKeydownModal(event) {\r\n    if (event.code === \"Escape\") {\r\n        toggleModal(event);\r\n    }\r\n}","//Generating a card for a slider, taking the video source as a parameter \r\nexport function generateCard(src) {\r\n    return `\r\n        <iframe\r\n            class=\"video video_preview\"\r\n            src=\"${src}?controls=0\"        \r\n        ></iframe>\r\n    `;\r\n}","//Generating a list of cards for the slider, taking a video collection as a\r\n//parameter\r\nexport function generateList(elements) {\r\n    return `\r\n        <ul class=\"slider\">\r\n            ${elements.reduce(\r\n                (markup, element, index) => markup + `\r\n                    <li class=\"list_item\">\r\n                        ${element}\r\n                        <div class=\"list_frame\" data-index=\"${index}\"></div>\r\n                    </li>\r\n                `, \"\")\r\n            }\r\n        </ul>\r\n    `;\r\n}","//Generation of a slider, the element that will be placed in the slider is\r\n//taken as a parameter. In my case this is a collection of videos\r\nimport { SLIDER_DIRECTION_MOVE } from \"../../const\";\r\n\r\nexport function generateSlider(element) {\r\n    return `\r\n        ${element}\r\n        <button\r\n            class=\"button slider_button slider_button__left\"\r\n            data-direction=\"${SLIDER_DIRECTION_MOVE.LEFT}\"\r\n        ></button>\r\n        <button\r\n            class=\"button slider_button slider_button__right\"\r\n            data-direction=\"${SLIDER_DIRECTION_MOVE.RIGHT}\"\r\n        ></button>\r\n    `;\r\n}","//Generating a player for a modal window, the index of the video that was\r\n//selected in the slider is taken as a parameter\r\nexport function generatePlayer(src) {\r\n    return `<iframe\r\n        class=\"video video_player\"\r\n        src=\"${src}?autoplay=1\"        \r\n    ></iframe>`;\r\n}","//Generating a pagination bar for a modal window, the index of the video that\r\n//is currently playing in the video collection is taken as a parameter\r\nimport { exampleGallery } from \"../../const\";\r\n\r\nexport function generateModalPagination(currentIndex) {\r\n    return `\r\n        <ul class=\"pagination\">\r\n            ${exampleGallery.reduce((markup, _, index) => (markup + `\r\n                <li\r\n                    class=\"pagination_item${index == currentIndex ?\r\n                        \" pagination_item__current\" :\r\n                        \"\"\r\n                    }\"\r\n                    data-index=\"${index}\"\r\n                ></li>\r\n            `), \"\")}\r\n        </ul>\r\n    `;\r\n}","//Generating content for a modal window, taking the video index in the video\r\n//collection as a parameter\r\nimport { generatePlayer } from \"../generatePlayer/generatePlayer\";\r\nimport { exampleGallery } from \"../../const\";\r\nimport { generateModalPagination } from \"../generateModalPagination/generateModalPagination\";\r\n\r\nexport function generateModal(index) {\r\n    return `\r\n        <button class=\"button modal_button\"></button>\r\n        ${generatePlayer(exampleGallery[index])}\r\n        ${generateModalPagination(index)}\r\n    `;\r\n}","//Generators of elements for rendering\r\nimport { generateCard } from \"./generateCard/generateCard\";\r\nimport { generateList } from \"./generateList/generateList\";\r\nimport { generateSlider } from \"./generateSlider/generateSlider\";\r\nimport { generateModal } from \"./generateModal/generateModal\";\r\nimport { generatePlayer } from \"./generatePlayer/generatePlayer\";\r\nimport { generateModalPagination } from \"./generateModalPagination/generateModalPagination\";\r\n\r\nexport {\r\n    generateCard,\r\n    generateList,\r\n    generateSlider,\r\n    generateModal,\r\n    generatePlayer,\r\n    generateModalPagination,\r\n};","//'click' event handler function for a modal window, handles clicking on the\r\n//close button and selecting a video using pagination, the event that occurred\r\n//is accepted as a parameter\r\nimport { toggleModal } from \"../toggleModal/toggleModal\";\r\nimport { getElement } from \"../getElement/getElement\";\r\nimport { generateModal } from \"../../partials\";\r\n\r\nexport function handleClickModal(event) {\r\n    //Gate for clicks on unnecessary elements\r\n    if (!event.target.classList.contains(\"modal_button\") && \r\n        !event.target.classList.contains(\"pagination_item\")) {\r\n        return;\r\n    }\r\n\r\n    //Handling a click on the close button of a modal window the modal window closes\r\n    if (event.target.classList.contains(\"modal_button\")) {\r\n        toggleModal(event);\r\n        return;\r\n    }\r\n\r\n    //Handling a click on the pagination page, the contents of the modal window are repaint\r\n    getElement(\".modal\").innerHTML = generateModal(event.target.dataset.index);\r\n}","//Function for opening/closing a modal window, as a parameter the event that\r\n//caused the opening/closing of the modal window\r\nimport { getElement } from \"../getElement/getElement\";\r\nimport { handleKeydownModal } from \"../handleKeydownModal/handleKeydownModal\";\r\nimport { handleClickModal } from \"../handleClickModal/handleClickModal\";\r\nimport { generateModal } from \"../../partials\";\r\n\r\nexport function toggleModal(event) {\r\n    const modal = getElement(\".modal\");\r\n    \r\n    modal.classList.toggle(\"modal__shown\");\r\n\r\n    //Processing the closing of a modal window,\r\n    //clearing the contents of the window and removing event handlers\r\n    if (!modal.classList.contains(\"modal__shown\")) {\r\n        modal.innerHTML = \"\";\r\n\r\n        modal.removeEventListener('click', handleClickModal);\r\n        document.removeEventListener('keydown', handleKeydownModal);\r\n        \r\n        return;\r\n    }\r\n\r\n    //Filling the contents of the modal window\r\n    modal.innerHTML = generateModal(event.target.dataset.index);\r\n\r\n    //Adding event handlers\r\n    modal.addEventListener('click', handleClickModal);\r\n    document.addEventListener('keydown', handleKeydownModal);\r\n}","//'click' event handler for the slider, handles the click event on the video\r\n//card and on the slider flipping buttons, takes the event that occurred as a\r\n//parameter\r\nimport { moveSlider } from \"../moveSlider/moveSlider\";\r\nimport { toggleModal } from \"../toggleModal/toggleModal\";\r\n\r\nexport function handleClickSlider(event) {\r\n    const { target: { className, dataset } } = event;\r\n\r\n    //Gate for clicks on unnecessary elements\r\n    if (!className.includes(\"list_frame\")\r\n        && !className.includes(\"slider_button\")) {\r\n            return;\r\n    }\r\n\r\n    //Handling a click on the video card, opening a modal window with the selected video\r\n    if (className.includes(\"list_frame\")) {\r\n        toggleModal(event);\r\n        return;\r\n    }\r\n    \r\n    ////Handling a click on the slider flipping buttons, the slider is scrolling\r\n    moveSlider(dataset.direction);\r\n    \r\n    //Removing focus from a slider flipping button\r\n    event.target.blur();\r\n}","//Utilities used in the application\r\nimport { getElement } from \"./getElement/getElement\";\r\nimport { handleClickSlider } from \"./handleClickSlider/handleClickSlider\";\r\nimport { moveSlider } from \"./moveSlider/moveSlider\";\r\nimport { toggleModal } from \"./toggleModal/toggleModal\";\r\nimport { handleKeydownModal } from \"./handleKeydownModal/handleKeydownModal\";\r\nimport { handleClickModal } from \"./handleClickModal/handleClickModal\";\r\n\r\nexport {\r\n    getElement,\r\n    handleClickSlider,\r\n    moveSlider,\r\n    toggleModal,\r\n    handleKeydownModal,\r\n    handleClickModal\r\n};","import {\r\n    getElement,\r\n    handleClickSlider,\r\n} from \"./utils\";\r\nimport { exampleGallery } from \"./const\";\r\nimport {\r\n    generateCard,\r\n    generateList,\r\n    generateSlider,\r\n} from \"./partials\";\r\n\r\nconst container = getElement(\".container\")\r\n\r\n//Adding a Slider\r\ncontainer.insertAdjacentHTML(\"beforeend\",\r\n    generateSlider(\r\n        generateList(\r\n            exampleGallery.map(video => generateCard(video))\r\n        )\r\n    )\r\n);\r\n\r\n//Adding an event handler\r\ncontainer.addEventListener('click', handleClickSlider);"]}